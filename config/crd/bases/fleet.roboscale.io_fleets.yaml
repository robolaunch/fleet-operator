---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: fleets.fleet.roboscale.io
spec:
  group: fleet.roboscale.io
  names:
    kind: Fleet
    listKind: FleetList
    plural: fleets
    singular: fleet
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Fleet manages lifecycle and configuration of multiple robots
          and robot's connectivity layer that contains DDS Discovery Server and ROS
          bridge services.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the Fleet.
            properties:
              discoveryServerTemplate:
                description: Discovery server configuration of fleet. For detailed
                  information, refer the document for the API group `robot.roboscale.io`.
                properties:
                  cluster:
                    description: Cloud instance name that holds DiscoveryServer instance
                      with `Server` type. Should be empty if the type is `Server`
                      since it takes cloud instance's name automatically. Should be
                      set if the type is `Client`.
                    type: string
                  domainID:
                    default: 0
                    description: ROS domain ID for robot. See https://docs.ros.org/en/foxy/Concepts/About-Domain-ID.html.
                    maximum: 101
                    minimum: 0
                    type: integer
                  hostname:
                    description: If instance type is `Server`, it can be an arbitrary
                      value. If instance type is `Client`, it should be the same with
                      Server's hostname. Used for getting Server's IP over DNS.
                    type: string
                  reference:
                    description: Reference to the `Server` instance. It is used if
                      `.spec.type` is `Client`. Referenced object can be previously
                      provisioned in another cluster. In that case, cluster's name
                      can be specified in `.spec.cluster` field.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  subdomain:
                    description: If instance type is `Server`, it can be an arbitrary
                      value. If instance type is `Client`, it should be the same with
                      Server's subdomain. Used for getting Server's IP over DNS.
                    type: string
                  type:
                    description: Instance type can be either `Server` or `Client`.
                      If `Server`, instance creates discovery server resources and
                      workloads. Other `Client` instances can connect to the `Server`
                      instance. If `Client`, instance tries to connect a `Server`
                      instance and hold `Server` configuration in a ConfigMap.
                    type: string
                required:
                - domainID
                type: object
              hybrid:
                description: Determines if the fleet should be federated across clusters
                  or not.
                type: boolean
              instances:
                description: If `.spec.hybrid` is true, this field includes Kubernetes
                  cluster names which the fleet will be federated to.
                items:
                  type: string
                type: array
            type: object
          status:
            description: Most recently observed status of the Fleet.
            properties:
              attachedRobots:
                description: Attached launch object information.
                items:
                  properties:
                    fleetCompatibility:
                      description: Compatibility status of attached robot with the
                        fleet.
                      properties:
                        isCompatible:
                          description: Indicates the robot's compatibility with fleet.
                          type: boolean
                        reason:
                          description: Indicates the possible incompatibility reason
                            of an attached robot.
                          type: string
                      required:
                      - isCompatible
                      type: object
                    phase:
                      description: Attached robot phase. For detailed information,
                        refer the document for the API group `robot.roboscale.io`.
                      type: string
                    reference:
                      description: Resource reference for attached robot.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              discoveryServerStatus:
                description: Discovery server instance status. For detailed information,
                  refer the document for the API group `robot.roboscale.io`.
                properties:
                  created:
                    description: Shows if the owned resource is created.
                    type: boolean
                  phase:
                    description: Phase of the owned resource.
                    type: string
                  reference:
                    description: Reference to the owned resource.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - created
                type: object
              namespaceStatus:
                description: Namespace status. Fleet creates namespace if the `.spec.hybrid`
                  is set to `true`. It creates `FederatedNamespace` if `false`.
                properties:
                  federated:
                    description: Sets to `true` if the owned namespace is federated.
                    type: boolean
                  ready:
                    description: Sets to `true` if the namespace is ready for the
                      resources to be deployed such as robot.
                    type: boolean
                  resource:
                    description: Generic structure of the most recent status of an
                      owned object. For detailed information, refer the document for
                      the API group `robot.roboscale.io`.
                    properties:
                      created:
                        description: Shows if the owned resource is created.
                        type: boolean
                      phase:
                        description: Phase of the owned resource.
                        type: string
                      reference:
                        description: Reference to the owned resource.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - created
                    type: object
                type: object
              phase:
                description: Fleet phase.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
